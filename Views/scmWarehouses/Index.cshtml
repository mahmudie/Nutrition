@{
    ViewData["Title"] = "Warehouses/Consignees";
}
@{
    var drpRegion = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.RegionSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "RegionId", Text = "RegionLong" } };
    var drpProvinces = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.ProvinceSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ProvinceId", Text = "ProvinceName" } };
    var drpImplementers = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.ImplementerSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ImpId", Text = "ImplementerName" } };
    var drpLevels = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.LevelSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "LevelId", Text = "LevelName" } };
}
<div class="container">

    <div class="row">
        <div class="col-md-12">
            <h3>@ViewData["Title"]</h3>

            <ejs-grid id="scmWarehousesGrid" allowSorting="true" actionComplete="actionComplete" toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update","Search"})" allowPaging="true">
                <e-data-manager url="/scmWarehouses/UrlDataSource" adaptor="UrlAdaptor" insertUrl="/scmWarehouses/Insert" updateUrl="/scmWarehouses/Update" removeUrl="/scmWarehouses/Remove"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="whId" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Left" width="80"></e-grid-column>
                    <e-grid-column field="warehouseName" headerText="Warehouse Name" validationRules="@(new { required=true})" textAlign="Left" width="150"></e-grid-column>
                    <e-grid-column field="regionId" foreignKeyField="RegionId" validationRules="@(new { required=true})" headerText="Region" foreignKeyValue="RegionLong"
                                   dataSource="ViewBag.RegionSource" editType="dropdownedit" textAlign="Left" width="140" edit="new {@params = drpRegion }"></e-grid-column>

                    <e-grid-column field="provinceId" foreignKeyField="ProvinceId" validationRules="@(new { required=true})" headerText="Province" foreignKeyValue="ProvinceName"
                                   dataSource="ViewBag.ProvinceSource" editType="dropdownedit" textAlign="Left" width="130" edit="new {@params = drpProvinces }"></e-grid-column>

                    <e-grid-column field="impId" foreignKeyField="ImpId" validationRules="@(new { required=true})" headerText="Implementer" foreignKeyValue="ImplementerName"
                                   dataSource="ViewBag.ImplementerSource" editType="dropdownedit" textAlign="Left" width="120" edit="new {@params = drpImplementers }"></e-grid-column>

                    <e-grid-column field="levelId" foreignKeyField="LevelId" validationRules="@(new { required=true})" clipMode="EllipsisWithTooltip" headerText="Level" foreignKeyValue="LevelName"
                                   dataSource="ViewBag.LevelSource" editType="dropdownedit" textAlign="Left" width="110" edit="new {@params = drpLevels }"></e-grid-column>
                    <e-grid-column field="location" headerText="Location" validationRules="@(new { required=true})" textAlign="Left" width="180"></e-grid-column>
                    <e-grid-column field="active" headerText="Active" template="#active" textAlign="Left" editType="booleanedit" type="Boolean" width="100"></e-grid-column>

                </e-grid-columns>
            </ejs-grid>

        </div>
    </div>
</div>
@section Scripts{

}
<script id="active" type="text/x-template">
    ${if(active==1)}
    <img src="/images/app/tick.png" /> Yes
    ${else}
    <img src="/images/app/cross.png" /> No
    ${/if}
</script>
<script>
    function actionComplete(args) {
        if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {
            var dialog = args.dialog;
            dialog.width = 650;
        }
    }

</script>