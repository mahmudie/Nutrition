
@{
    ViewData["Title"] = "Distribution Round";
}
@{
    var drpRequesttypes = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.RequestTypes, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "RequesttypeId", Text = "Requesttypename" } };
    var drpYearFroms = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.YearFroms, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "YearId", Text = "YearName" } };
    var drpYearTos = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.YearTos, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "YearId", Text = "YearName" } };
    var drpMonths = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.MonthsFrom, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "MonthId", Text = "MonthName" } };
    var drpMonthsTo = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.MonthsTo, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "MonthId", Text = "MonthName" } };
}
<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <h3>Request/Distribution Quarters</h3>
            <ejs-grid id="RoundsGrid" allowSorting="true" load="load"  allowTextWrap="true" actionComplete="actionComplete" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update","Search" })" allowPaging="true">
                <e-data-manager url="/scmRounds/UrlDataSource" adaptor="UrlAdaptor" insertUrl="/scmRounds/Insert" updateUrl="/scmRounds/Update" removeUrl="/scmRounds/Remove"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="roundId" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Left" width="60"></e-grid-column>
                    <e-grid-column field="roundCode" headerText="Qtr Code" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="roundDescription" headerText="Description"  validationRules="@(new { required=true})" textAlign="Left" width="200"></e-grid-column>
                    <e-grid-column field="requesttypeId" foreignKeyField="RequesttypeId" headerText="Request Type" foreignKeyValue="Requesttypename"
                                   dataSource="ViewBag.RequestTypes" editType="dropdownedit" edit="new {@params = drpRequesttypes }" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="periodFrom" headerText="Period From" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" validationRules="@(new { required=true})" textAlign="Left" width="100"></e-grid-column>
                    <e-grid-column field="periodTo" headerText="Period To" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" validationRules="@(new { required=true})" textAlign="Left" width="100"></e-grid-column>                    \
                    <e-grid-column field="yearFrom" foreignKeyField="YearId" headerText="Year From" foreignKeyValue="YearName"
                                   dataSource="ViewBag.YearFroms" editType="dropdownedit" edit="new {@params = drpYearFroms }" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="monthFrom" foreignKeyField="MonthId" headerText="Month From" foreignKeyValue="MonthName"
                                   dataSource="ViewBag.MonthsFrom" editType="dropdownedit" edit="new {@params = drpMonths }" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="yearTo" foreignKeyField="YearId" headerText="Year To" foreignKeyValue="YearName"
                                   dataSource="ViewBag.YearFroms" editType="dropdownedit" edit="new {@params = drpYearTos }" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="monthTo" foreignKeyField="MonthId" headerText="Month To" foreignKeyValue="MonthName"
                                   dataSource="ViewBag.MonthsTo" editType="dropdownedit" edit="new {@params = drpMonthsTo }" validationRules="@(new { required=true})" textAlign="Left" width="130"></e-grid-column>
                    <e-grid-column field="isActive" defaultValue="1" template="#activetemplate" headerText="Is Active" textAlign="Left" editType="booleanedit" type="Boolean" width="100"></e-grid-column>

                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
</div>
@section Scripts{
}
<script id="activetemplate" type="text/x-template">
    ${if(isActive==1)}
    <img src="/images/app/tick.png" /> Yes
    ${else}
    <img src="/images/app/cross.png" /> No
    ${/if}
</script>
<script>
    function actionComplete(args) {
        if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {
            var dialog = args.dialog;
            dialog.width = 650;
            // change the header of the dialog
            dialog.header = args.requestType === 'beginEdit' ? 'Record of ' + args.rowData['roundDescription'] : 'New';
        }
    }
    var grid;
    function load(args) {
        grid = this;
        grid.columns[9].validationRules = { required: true, minLength: [customFn, 'Please check that you are selecting correct Request Type, Year From, Month From, Year To, and Month To!'] };
    } 

    function customFn(args) { 
        var form = ej.grids.parentsUntil(args.element, 'e-gridform'); 
        // here you can get the other columns’s edited value 
        var editedData = grid.editModule.getCurrentEditedData(form, {}); 

        var requestTypeId = editedData['requesttypeId'];
        var yearFrom = editedData['yearFrom'];
        var monthFrom = editedData['monthFrom']
        var yearTo = editedData['yearTo']
        var monthTo = editedData['monthTo']

        return validatePeriod(requestTypeId,yearFrom,monthFrom,yearTo,monthTo)==1; 
    }; 

    function validatePeriod(typeid, yearfrom, monthfrom, yearto, monthto) {
        var pass = 0;
        switch (typeid) {
            case 2:
                if (yearfrom === yearto) {
                    if (((monthfrom === 1) || (monthfrom == 4) || (monthfrom == 7) || (monthfrom == 10))) {
                        if (((monthto == 3)||(monthto == 6) || (monthto == 9) || (monthto == 12))) {
                            if ((monthto - monthfrom) < 3) {
                                pass = 1;
                            }
                            else {
                                pass = 0;
                            }
                        }
                    }

                }
                else {
                    pass = 0;
                }
                break;
                
            case 1:
                dif = yearto - yearfrom;
                monthDif = 13 - monthfrom;
                if (dif > 1 || dif < 0) {
                    pass = 0;
                }
                else if (dif == 0 && monthfrom == 1 && (monthto - monthfrom)+1 == 12) {
                    pass = 1;
                }
                else if (dif == 1 && (monthDif + monthto) == 12) {
                    pass = 1;
                }
                else {
                    pass = 0;
                }
                break;
        }
        return pass;
    }
</script>