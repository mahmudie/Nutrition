@model DataSystem.Models.Notehelpers

@{
    ViewData["Title"] = "Create Note/Tips";
}

<link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />
<link href="~/richtexteditor/codemirror.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js" type="text/javascript"></script>

<div class="container-fluid">
    <form asp-action="Create">
        <h3>@ViewData["Title"]</h3>
        <table class="table table-responsive">
            <tr>
                <th>Form Name</th>
            </tr>
            <tr>
                <td>
                    <div>
                        @Html.TextBoxFor(x => x.FormName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.FormName, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <th>From URL</th>
            </tr>
            <tr>
                <td>
                    <div>
                        @Html.TextBoxFor(x => x.Url, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Url, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <th>Section Name</th>
            </tr>
            <tr>
                <td>
                    <div>
                        @Html.TextBoxFor(x => x.SectionName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.SectionName, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>
            <tr>
                <th>Section Code</th>
            </tr>
            <tr>
                <td>
                    <div>
                        @Html.TextBoxFor(x => x.SectionCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.SectionCode, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>

            <tr>
                <th>Tip/Note</th>
            </tr>
            <tr>
                <td>
                    <div>
                        <ejs-richtexteditor id="Tip" ejs-for="Tip" height="300px" showCharCount="true" actionBegin="handleFullScreen" actionComplete="actionCompleteHandler" created="created">
                            <e-content-template>

                            </e-content-template>
                            <e-richtexteditor-toolbarsettings items="@ViewBag.tools">
                            </e-richtexteditor-toolbarsettings>
                            <e-richtexteditor-pastecleanupsettings Prompt="true"></e-richtexteditor-pastecleanupsettings>
                        </ejs-richtexteditor>

                    </div>
                </td>
            </tr>
        </table>
        <div class="box-footer">
            <button type="submit" class="btn btn-primary pull-right"><i class="fa fa-save"></i> Save</button>
            <a class="btn btn-danger" href="~/Notehelper/List"><i class="fa fa-arrow-left"></i> Back To List</a>
        </div>
    </form>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<style>
    .topitem {
        z-index: 1200;
        margin-top: 4% !important;
    }

    .e-code-mirror::before {
        content: '\e345';
    }

    .e-html-preview::before {
        content: '\e350';
    }

    .CodeMirror-linenumber,
    .CodeMirror-gutters {
        display: none;
    }

    .sb-header {
        z-index: 100;
    }

    .sb-content.e-view.hide-header {
        top: 0 !important;
    }

    .sb-header.e-view.hide-header {
        display: none;
    }

    .e-richtexteditor .e-rte-content .e-content pre {
        padding: 10px;
        background: #F4F5F7;
    }

    .highcontrast .e-richtexteditor .e-rte-content .e-content pre {
        padding: 10px;
        background: #303030;
    }
</style>
<script type="text/javascript">
    var rteObj, myCodeMirror, textArea;
    function created() {
        rteObj = this;
        textArea = rteObj.contentModule.getEditPanel();
    }
    function mirrorConversion(e) {
        var id = rteObj.getID() + 'mirror-view';
        var mirrorView = rteObj.element.querySelector('#' + id);
        var charCount = rteObj.element.querySelector('.e-rte-character-count');
        if (e.targetItem === 'Preview') {
            textArea.style.display = 'block';
            mirrorView.style.display = 'none';
            textArea.innerHTML = myCodeMirror.getValue();
            charCount.style.display = 'block';
        }
        else {
            if (!mirrorView) {
                mirrorView = ej.base.createElement('div', { className: 'e-content' });
                mirrorView.id = id;
                textArea.parentNode.appendChild(mirrorView);
            }
            else {
                mirrorView.innerHTML = '';
            }
            textArea.style.display = 'none';
            mirrorView.style.display = 'block';
            renderCodeMirror(mirrorView, defaultRTE.value);
            charCount.style.display = 'none';
        }
    }
    function renderCodeMirror(mirrorView, content) {
        myCodeMirror = CodeMirror(mirrorView, {
            value: content,
            lineNumbers: true,
            mode: 'text/html',
            lineWrapping: true,
        });
    }

    function handleFullScreen(e) {
        var sbCntEle = document.querySelector('.sb-content.e-view');
        var sbHdrEle = document.querySelector('.sb-header.e-view');
        if (e.targetItem === 'Maximize') {
            if (ej.base.Browser.isDevice && ej.base.Browser.isIos) {
                ej.base.addClass([sbCntEle, sbHdrEle], ['hide-header']);
            }

            var RTE = document.getElementById('Content').ej2_instances[0];
            RTE.element.classList.add('topitem');
        }
        else if (e.targetItem === 'Minimize') {
            if (ej.base.Browser.isDevice && ej.base.Browser.isIos) {
                ej.base.removeClass([sbCntEle, sbHdrEle], ['hide-header']);
            }
            var RTE = document.getElementById('Content').ej2_instances[0];
            RTE.element.classList.remove("topitem");
        }
    }
    function actionCompleteHandler(e) {
        if (e.targetItem && (e.targetItem === 'SourceCode' || e.targetItem === 'Preview')) {
            this.sourceCodeModule.getPanel().style.display = 'none';
            mirrorConversion(e);
        }
        else {
            setTimeout(function () { rteObj.toolbarModule.refreshToolbarOverflow(); }, 400);
        }
    }
</script>
