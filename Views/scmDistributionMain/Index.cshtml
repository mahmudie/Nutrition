@{
    ViewData["Title"] = "Stock Issued to IP";
}

@{
    var drpRounds = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.RoundSources, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "RoundId", Text = "RoundDescription" } };
    var drpImplementers = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.ImpSources, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ImpId", Text = "ImpName" } };
    var drpProvinces = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.ProvinceSources, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ProvinceId", Text = "ProvinceName" } };

}
@{
    List<object> commands = new List<object>();
    commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
    commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
    commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });
}
<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <h3>@ViewData["Title"]</h3>

            <ejs-grid id="scmDistributionMainGrid" editSettings="@(new Syncfusion.EJ2.Grids.GridEditSettings { AllowAdding = ViewBag.gridAdd, AllowEditing = ViewBag.gridEdit, AllowDeleting = ViewBag.gridDelete,Mode=Syncfusion.EJ2.Grids.EditMode.Dialog})" allowSorting="true"  actionBegin="Begin" toolbarClick="toolbarClick" actionComplete="actionComplete" toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update"})" allowPaging="true">
                <e-data-manager url="/scmDistributionMain/UrlDataSource" adaptor="UrlAdaptor" insertUrl="/scmDistributionMain/Insert" updateUrl="/scmDistributionMain/Update" removeUrl="/scmDistributionMain/Remove"></e-data-manager>
                @*<e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>*@
            <e-grid-columns>
                <e-grid-column field="distributionId" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Left" width="80"></e-grid-column>
                <e-grid-column field="roundId" foreignKeyField="RoundId" validationRules="@(new { required=true})" headerText="Distribution Round" foreignKeyValue="RoundDescription"
                               dataSource="ViewBag.RoundSources" editType="dropdownedit" textAlign="Left" width="350" edit="new {@params = drpRounds }"></e-grid-column>
                <e-grid-column field="impId" foreignKeyField="ImpId" validationRules="@(new { required=true})" headerText="Implementer" clipMode="EllipsisWithTooltip" foreignKeyValue="ImpName"
                               dataSource="ViewBag.ImpSources" editType="dropdownedit" textAlign="Left" width="160" edit="new {@params = drpImplementers }"></e-grid-column>
                <e-grid-column field="provinceId" foreignKeyField="ProvinceId" validationRules="@(new { required=true})" headerText="Province" clipMode="EllipsisWithTooltip" foreignKeyValue="ProvinceName"
                               dataSource="ViewBag.ProvinceSources" editType="dropdownedit" textAlign="Left" width="160" edit="new {@params = drpProvinces }"></e-grid-column>

                <e-grid-column field="distributionDate" headerText="Distribution Date" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                <e-grid-column headerText="Manage Records" width="120" commands="commands"></e-grid-column>
            </e-grid-columns>
            </ejs-grid>

        </div>
    </div>
</div>
@section Scripts{

}
<script>
    function actionComplete(args) {
        if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {
            var dialog = args.dialog;
            dialog.width = 650;
        }
    }

    var commandClick;
    function toolbarClick(args) {
        if (args.name === 'toolbarClick')
            commandClick = true;
    }

    function Begin(args) {
        var type = args.requestType;
        if (type == "beginEdit" || type == "add") {
            if (!commandClick) {
                args.cancel = true;
                if (args.rowIndex != undefined)
                    var ID = this.currentViewData[args.rowIndex]["distributionId"];
                if (type == "beginEdit")
                    var url = "/scmDistributionMain/Edit/" + ID;
                else if (type == "add")
                    var url = "/scmDistributionMain/Edit/" + 0;
                location.assign(url);
            }
            commandClick = false;
        }
    }
</script>