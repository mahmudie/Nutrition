@{
    ViewData["Title"] = "Distributions";
}
@{
    var drpWarehouses = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.WarehouseSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "WhId", Text = "WarehouseName" } };
    var drpStockItems = new Syncfusion.EJ2.DropDowns.DropDownList() { Change = "Changstock", DataSource = ViewBag.StockSource, Query = "new ej.data.Query()", AllowFiltering = true, Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "StockId", Text = "StockItem" } };

}
<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <h3>Distributions</h3>

            <ejs-grid id="scmDistributionsIPGrid" allowSorting="true" actionComplete="actionComplete" toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update"})" allowPaging="true">
                <e-data-manager url="/scmDistributionsIP/UrlDataSource" adaptor="UrlAdaptor" insertUrl="/scmDistributionsIP/Insert" updateUrl="/scmDistributionsIP/Update" removeUrl="/scmDistributionsIP/Remove"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="id" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Left" width="80"></e-grid-column>
                    <e-grid-column field="stockId" foreignKeyField="StockId" validationRules="@(new { required=true})" headerText="Stock Item" foreignKeyValue="StockItem"
                                   dataSource="ViewBag.StockSource" editType="dropdownedit" textAlign="Left" width="200" edit="new {@params = drpStockItems }"></e-grid-column>
                    <e-grid-column field="batchNumber" headerText="Batch Number" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="quantity" headerText="Quantity" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="whId" foreignKeyField="WhId" validationRules="@(new { required=true})" headerText="Warehouse" clipMode="EllipsisWithTooltip" foreignKeyValue="WarehouseName"
                                   dataSource="ViewBag.WarehouseSource" editType="dropdownedit" textAlign="Left" width="160" edit="new {@params = drpWarehouses }"></e-grid-column>

                    <e-grid-column field="issueTo" headerText="Issued To" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="issueDate" headerText="Issue Date" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="issueBy" headerText="Issued By" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="approveBy" headerText="Approved By" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="apprveDate" headerText="Apprval Date" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" validationRules="@(new { required=true})" textAlign="Left" width="110"></e-grid-column>
                    <e-grid-column field="expiryDate" headerText="Expiry Date" validationRules="@(new { required=true})" editType="datepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y" })" textAlign="Left" width="110"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>

        </div>
    </div>
</div>
@section Scripts{
}
<script>
    function actionComplete(args) {
        if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {
            var dialog = args.dialog;
            dialog.width = 650;
        }
    }

    var balance;
    function Changstock(args) {
        var grid = document.getElementsByClassName('e-grid')[0].ej2_instances[0];
        var arr = args.itemData.name.split(",");
        var batno = arr[0].match(/\d+/g)[0];                           //export the number by using regular expression
        grid.editModule.formObj.element[1].value = batno;              //Update the value to grid form
    }

</script>
